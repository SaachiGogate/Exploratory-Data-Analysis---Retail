The Sparks Foundation #GRIPJUN21
Name: Saachi Gogate
Task 3: Exploratory Data Analysis - Retail
Objective: find out the weak areas where you can work to make more profit.
Data: https://bit.ly/3i4rbWl
Importing required libraries.
import pandas as pd 
import matplotlib.pyplot as plt
import cufflinks as cf
import seaborn as sns
%matplotlib inline
from plotly import __version__
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
â€‹
print(__version__) # requires version >= 1.9.0
4.14.3
init_notebook_mode(connected=True)
cf.go_offline()
Fetching the data
store = pd.read_csv('SampleSuperstore.csv')
store.head()
Ship Mode	Segment	Country	City	State	Postal Code	Region	Category	Sub-Category	Sales	Quantity	Discount	Profit
0	Second Class	Consumer	United States	Henderson	Kentucky	42420	South	Furniture	Bookcases	261.9600	2	0.00	41.9136
1	Second Class	Consumer	United States	Henderson	Kentucky	42420	South	Furniture	Chairs	731.9400	3	0.00	219.5820
2	Second Class	Corporate	United States	Los Angeles	California	90036	West	Office Supplies	Labels	14.6200	2	0.00	6.8714
3	Standard Class	Consumer	United States	Fort Lauderdale	Florida	33311	South	Furniture	Tables	957.5775	5	0.45	-383.0310
4	Standard Class	Consumer	United States	Fort Lauderdale	Florida	33311	South	Office Supplies	Storage	22.3680	2	0.20	2.5164
magma
sns.barplot(data=store, x='Category', y='Sales', palette='magma')
<AxesSubplot:xlabel='Category', ylabel='Sales'>

sns.barplot(data=store, x='Category', y='Profit')
<AxesSubplot:xlabel='Category', ylabel='Profit'>

>Technology category has the maximum sales out of the three categories, and Office Supplies the minimum. Office Supply category sales can be improved.
> Profit on Furniture is a weak area as it is the least among the three categories
store.iplot(x='Sub-Category', y='Quantity', kind='bar', sortbars=True)
>The quantity of Binders sold is the most, and the least is of Copiers.
Importing chart-studio to create choropleth maps.
import chart_studio.plotly as py
import plotly.graph_objs as go 
from plotly.offline import download_plotlyjs, init_notebook_mode, plot, iplot
init_notebook_mode(connected=True)
by_s=store.groupby('State')
ata.
ss = by_s.sum()
ss.drop(['Postal Code', "Discount"], axis=1) #there are only 49 states in the data.
Sales	Quantity	Profit
State			
Alabama	19510.6400	256	5786.8253
Arizona	35282.0010	862	-3427.9246
Arkansas	11678.1300	240	4008.6871
California	457687.6315	7667	76381.3871
Colorado	32108.1180	693	-6527.8579
Connecticut	13384.3570	281	3511.4918
Delaware	27451.0690	367	9977.3748
District of Columbia	2865.0200	40	1059.5893
Florida	89473.7080	1379	-3399.3017
Georgia	49095.8400	705	16250.0433
Idaho	4382.4860	64	826.7231
Illinois	80166.1010	1845	-12607.8870
Indiana	53555.3600	578	18382.9363
Iowa	4579.7600	112	1183.8119
Kansas	2914.3100	74	836.4435
Kentucky	36591.7500	523	11199.6966
Louisiana	9217.0300	156	2196.1023
Maine	1270.5300	35	454.4862
Maryland	23705.5230	420	7031.1788
Massachusetts	28634.4340	491	6785.5016
Michigan	76269.6140	946	24463.1876
Minnesota	29863.1500	331	10823.1874
Mississippi	10771.3400	221	3172.9762
Missouri	22205.1500	252	6436.2105
Montana	5589.3520	56	1833.3285
Nebraska	7464.9300	136	2037.0942
Nevada	16729.1020	168	3316.7659
New Hampshire	7292.5240	127	1706.5028
New Jersey	35764.3120	454	9772.9138
New Mexico	4783.5220	151	1157.1161
New York	310876.2710	4224	74038.5486
North Carolina	55603.1640	983	-7490.9122
North Dakota	919.9100	30	230.1497
Ohio	78258.1360	1759	-16971.3766
Oklahoma	19683.3900	247	4853.9560
Oregon	17431.1500	499	-1190.4705
Pennsylvania	116511.9140	2153	-15559.9603
Rhode Island	22627.9560	199	7285.6293
South Carolina	8481.7100	172	1769.0566
South Dakota	1315.5600	42	394.8283
Tennessee	30661.8730	681	-5341.6936
Texas	170188.0458	3724	-25729.3563
Utah	11220.0560	219	2546.5335
Vermont	8929.3700	50	2244.9783
Virginia	70636.7200	893	18597.9504
Washington	138641.2700	1883	33402.6517
West Virginia	1209.8240	18	185.9216
Wisconsin	32114.6100	463	8401.8004
Wyoming	1603.1360	4	100.1960
Getting State Codes for Geographical plots.
codes = pd.read_csv('csvData.csv') # remove alaska and hawaii from this since they aren't included in the given dataset.
codes
State	Abbrev	Code
0	Alabama	Ala.	AL
1	Alaska	Alaska	AK
2	Arizona	Ariz.	AZ
3	Arkansas	Ark.	AR
4	California	Calif.	CA
5	Colorado	Colo.	CO
6	Connecticut	Conn.	CT
7	Delaware	Del.	DE
8	District of Columbia	D.C.	DC
9	Florida	Fla.	FL
10	Georgia	Ga.	GA
11	Hawaii	Hawaii	HI
12	Idaho	Idaho	ID
13	Illinois	Ill.	IL
14	Indiana	Ind.	IN
15	Iowa	Iowa	IA
16	Kansas	Kans.	KS
17	Kentucky	Ky.	KY
18	Louisiana	La.	LA
19	Maine	Maine	ME
20	Maryland	Md.	MD
21	Massachusetts	Mass.	MA
22	Michigan	Mich.	MI
23	Minnesota	Minn.	MN
24	Mississippi	Miss.	MS
25	Missouri	Mo.	MO
26	Montana	Mont.	MT
27	Nebraska	Nebr.	NE
28	Nevada	Nev.	NV
29	New Hampshire	N.H.	NH
30	New Jersey	N.J.	NJ
31	New Mexico	N.M.	NM
32	New York	N.Y.	NY
33	North Carolina	N.C.	NC
34	North Dakota	N.D.	ND
35	Ohio	Ohio	OH
36	Oklahoma	Okla.	OK
37	Oregon	Ore.	OR
38	Pennsylvania	Pa.	PA
39	Rhode Island	R.I.	RI
40	South Carolina	S.C.	SC
41	South Dakota	S.D.	SD
42	Tennessee	Tenn.	TN
43	Texas	Tex.	TX
44	Utah	Utah	UT
45	Vermont	Vt.	VT
46	Virginia	Va.	VA
47	Washington	Wash.	WA
48	West Virginia	W.Va.	WV
49	Wisconsin	Wis.	WI
50	Wyoming	Wyo.	WY
codes1=codes.drop([1,11],axis=0)
codes1
State	Abbrev	Code
0	Alabama	Ala.	AL
2	Arizona	Ariz.	AZ
3	Arkansas	Ark.	AR
4	California	Calif.	CA
5	Colorado	Colo.	CO
6	Connecticut	Conn.	CT
7	Delaware	Del.	DE
8	District of Columbia	D.C.	DC
9	Florida	Fla.	FL
10	Georgia	Ga.	GA
12	Idaho	Idaho	ID
13	Illinois	Ill.	IL
14	Indiana	Ind.	IN
15	Iowa	Iowa	IA
16	Kansas	Kans.	KS
17	Kentucky	Ky.	KY
18	Louisiana	La.	LA
19	Maine	Maine	ME
20	Maryland	Md.	MD
21	Massachusetts	Mass.	MA
22	Michigan	Mich.	MI
23	Minnesota	Minn.	MN
24	Mississippi	Miss.	MS
25	Missouri	Mo.	MO
26	Montana	Mont.	MT
27	Nebraska	Nebr.	NE
28	Nevada	Nev.	NV
29	New Hampshire	N.H.	NH
30	New Jersey	N.J.	NJ
31	New Mexico	N.M.	NM
32	New York	N.Y.	NY
33	North Carolina	N.C.	NC
34	North Dakota	N.D.	ND
35	Ohio	Ohio	OH
36	Oklahoma	Okla.	OK
37	Oregon	Ore.	OR
38	Pennsylvania	Pa.	PA
39	Rhode Island	R.I.	RI
40	South Carolina	S.C.	SC
41	South Dakota	S.D.	SD
42	Tennessee	Tenn.	TN
43	Texas	Tex.	TX
44	Utah	Utah	UT
45	Vermont	Vt.	VT
46	Virginia	Va.	VA
47	Washington	Wash.	WA
48	West Virginia	W.Va.	WV
49	Wisconsin	Wis.	WI
50	Wyoming	Wyo.	WY
Creating Geographical plots of USA showing Sales and Profit per State.
data = dict(type = 'choropleth', locations=codes1['Code'],locationmode = 'USA-states', z=ss['Sales'], colorscale='darkmint',
            colorbar = {'title':'Sales'}, text=codes1['State'])
map1 = go.Figure(data=[data], layout=dict(title='Sales Per State', geo={'scope':'usa'}))
iplot(map1)
> Here, darker the colour, more the sales. So, as we can see, California has the highest sales,followed by New York and Texas, and North Dakota has the weakest sales.
pinkyl
data1 = dict(type = 'choropleth', locations=codes1['Code'],locationmode = 'USA-states', z=ss['Profit'], colorscale='pinkyl',
            colorbar = {'title':'Profit'}, text=codes1['State'])
map2 = go.Figure(data=data1, layout= dict(title='Profit per State', geo={'scope':'usa'}))
iplot(map2)
> So, according to the colour scale, California has the highest profit, followed by New York, and Texas is actually in loss, even if it has third highest sales.
sub
by_sub = store.groupby('Sub-Category')
sub = by_sub.sum().drop(['Postal Code','Discount'], axis=1)
sub = sub.reset_index()
sub
Sub-Category	Sales	Quantity	Profit
0	Accessories	167380.3180	2976	41936.6357
1	Appliances	107532.1610	1729	18138.0054
2	Art	27118.7920	3000	6527.7870
3	Binders	203412.7330	5974	30221.7633
4	Bookcases	114879.9963	868	-3472.5560
5	Chairs	328449.1030	2356	26590.1663
6	Copiers	149528.0300	234	55617.8249
7	Envelopes	16476.4020	906	6964.1767
8	Fasteners	3024.2800	914	949.5182
9	Furnishings	91705.1640	3563	13059.1436
10	Labels	12486.3120	1400	5546.2540
11	Machines	189238.6310	440	3384.7569
12	Paper	78479.2060	5178	34053.5693
13	Phones	330007.0540	3289	44515.7306
14	Storage	223843.6080	3158	21278.8264
15	Supplies	46673.5380	647	-1189.0995
16	Tables	206965.5320	1241	-17725.4811
sub['Profit'].max()
sub[sub['Profit']> 55617]
Sub-Category	Sales	Quantity	Profit
6	Copiers	149528.03	234	55617.8249
<
sub['Profit'].min()
sub[sub['Profit']<-17725 ]
Sub-Category	Sales	Quantity	Profit
16	Tables	206965.532	1241	-17725.4811
or
sub.iplot(x='Sub-Category', y='Profit', kind='bar', colors='purple', xTitle='Sub-categories', yTitle='Profit')
> Copiers bring in the most Profit, and profit on Tables , Bookcases, Supplies has to be enhanced.
